name: Build

on:
  push:
    tags:
      - '*.*.*'
      - '*.*'

jobs:
  patch:
    runs-on: windows-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@master
      - name: Dependencies
        run: |
          Write-Verbose -Message Dependencies -Verbose

          # Download PolicyFileEditor
          # https://github.com/dlwyatt/PolicyFileEditor
          $Parameters = @{
              Uri            = "https://api.github.com/repos/dlwyatt/PolicyFileEditor/releases/latest"
              UseBasicParsing = $true
          }
          $LatestPolicyFileEditorVersion = (Invoke-RestMethod @Parameters).tag_name

          $Parameters = @{
              Uri             = "https://github.com/dlwyatt/PolicyFileEditor/archive/refs/tags/3.0.1.zip"
              OutFile         = "$PSScriptRoot\3.0.1.zip"
              UseBasicParsing = $true
              Verbose         = $true
          }
          Invoke-WebRequest @Parameters

          # Expand zip archive
          $Parameters = @{
              Path            = "$PSScriptRoot\3.0.1.zip"
              DestinationPath = "$PSScriptRoot"
              Force           = $true
              Verbose         = $true
          }
          Expand-Archive @Parameters

          $Path = @(
              "$PSScriptRoot\PolicyFileEditor-3.0.1\DscResources",
              "$PSScriptRoot\PolicyFileEditor-3.0.1\en-US",
              "$PSScriptRoot\PolicyFileEditor-3.0.1\build.psake.ps1",
              "$PSScriptRoot\PolicyFileEditor-3.0.1\LICENSE",
              "$PSScriptRoot\PolicyFileEditor-3.0.1\PolicyFileEditor.Tests.ps1",
              "$PSScriptRoot\PolicyFileEditor-3.0.1\README.md"
          )
          Remove-Item -Path $Path -Recurse -Force

          Rename-Item -Path "$PSScriptRoot\PolicyFileEditor-3.0.1" -NewName "$PSScriptRoot\PolicyFileEditor" -Force

          # Download Microsoft.Windows.SDK.NET.dll & WinRT.Runtime.dll
          $Parameters = @{
              Uri             = "https://www.nuget.org/api/v2/package/Microsoft.Windows.SDK.NET.Ref"
              OutFile         = "$PSScriptRoot\microsoft.windows.sdk.net.ref.nupkg"
              UseBasicParsing = $true
          }
          Invoke-RestMethod @Parameters

          # Rename archive to able to expand it
          Rename-Item -Path "$PSScriptRoot\microsoft.windows.sdk.net.ref.nupkg" -NewName "$PSScriptRoot\microsoft.windows.sdk.net.ref.zip" -Force

          # Extract Microsoft.Windows.SDK.NET.dll & WinRT.Runtime.dll from archive
          Add-Type -Assembly System.IO.Compression.FileSystem
          $ZIP = [IO.Compression.ZipFile]::OpenRead("$PSScriptRoot\microsoft.windows.sdk.net.ref.zip")
          $Entries = $ZIP.Entries | Where-Object -FilterScript {($_.FullName -eq "lib/Microsoft.Windows.SDK.NET.dll") -or ($_.FullName -eq "lib/WinRT.Runtime.dll")}
          $Entries | ForEach-Object -Process {[IO.Compression.ZipFileExtensions]::ExtractToFile($_, "$PSScriptRoot\$($_.Name)", $true)}
          $ZIP.Dispose()

      - name: Sophia Script for Windows 10
        run: |
          # https://github.com/farag2/Sophia-Script-for-Windows/blob/master/sophia_script_versions.json
          $Parameters = @{
            Uri = "https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/sophia_script_versions.json"
          }
          $LatestRelease = (Invoke-RestMethod @Parameters).Sophia_Script_Windows_10_PowerShell_5_1

          Write-Verbose -Message "Sophia.Script.for.Windows.10.v$LatestRelease.zip" -Verbose

          New-Item -Path "Sophia Script for Windows 10 v$LatestRelease\bin" -ItemType Directory -Force
          $Parameters = @{
              Path            = @("$PSScriptRoot\PolicyFileEditor")
              Destination     = "Sophia Script for Windows 10 v$LatestRelease\bin"
              Recurse         = $true
              Force           = $true
          }
          Copy-Item @Parameters
          Get-ChildItem -Path "Sophia Script\Sophia Script for Windows 10" -Force | Copy-Item -Destination "Sophia Script for Windows 10 v$LatestRelease" -Recurse -Force

          $Parameters = @{
              Path             = "Sophia Script for Windows 10 v$LatestRelease"
              DestinationPath  = "Sophia.Script.for.Windows.10.v$LatestRelease.zip"
              CompressionLevel = "Fastest"
              Force            = $true
          }
          Compress-Archive @Parameters

          # Calculate hash
          Get-Item -Path "Sophia.Script.for.Windows.10.v$LatestRelease.zip" -Force | ForEach-Object -Process {
              "$($_.Name)  $((Get-FileHash -LiteralPath $_.FullName -Algorithm SHA256).Hash)"
          } | Add-Content -Path SHA256SUM -Encoding Default -Force

      - name: Sophia Script for Windows 10 PowerShell 7
        run: |
          # https://github.com/farag2/Sophia-Script-for-Windows/blob/master/sophia_script_versions.json
          $Parameters = @{
            Uri = "https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/sophia_script_versions.json"
          }
          $LatestRelease = (Invoke-RestMethod @Parameters).Sophia_Script_Windows_10_PowerShell_7

          Write-Verbose -Message "Sophia.Script.for.Windows.10.PowerShell.7.v$LatestRelease.zip" -Verbose

          New-Item -Path "Sophia Script for Windows 10 PowerShell 7 v$LatestRelease\bin" -ItemType Directory -Force

          $Parameters = @{
              Path            = @("$PSScriptRoot\PolicyFileEditor", "$PSScriptRoot\WinRT.Runtime.dll", "$PSScriptRoot\Microsoft.Windows.SDK.NET.dll")
              Destination     = "Sophia Script for Windows 10 PowerShell 7 v$LatestRelease\bin"
              Recurse         = $true
              Force           = $true
          }
          Copy-Item @Parameters
          Get-ChildItem -Path "Sophia Script\Sophia Script for Windows 10 PowerShell 7" -Force | Copy-Item -Destination "Sophia Script for Windows 10 PowerShell 7 v$LatestRelease" -Recurse -Force

          $Parameters = @{
              Path             = "Sophia Script for Windows 10 PowerShell 7 v$LatestRelease"
              DestinationPath  = "Sophia.Script.for.Windows.10.PowerShell.7.v$LatestRelease.zip"
              CompressionLevel = "Fastest"
              Force            = $true
          }
          Compress-Archive @Parameters

          # Calculate hash
          Get-Item -Path "Sophia.Script.for.Windows.10.PowerShell.7.v$LatestRelease.zip" -Force | ForEach-Object -Process {
              "$($_.Name)  $((Get-FileHash -LiteralPath $_.FullName -Algorithm SHA256).Hash)"
          } | Add-Content -Path SHA256SUM -Encoding Default -Force

      - name: Sophia Script for Windows 10 LTSC 2019
        run: |
          # https://github.com/farag2/Sophia-Script-for-Windows/blob/master/sophia_script_versions.json
          $Parameters = @{
            Uri = "https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/sophia_script_versions.json"
          }
          $LatestRelease = (Invoke-RestMethod @Parameters).Sophia_Script_Windows_10_LTSC2019

          Write-Verbose -Message "Sophia.Script.for.Windows.10.LTSC.2019.v$LatestRelease.zip" -Verbose

          New-Item -Path "Sophia Script for Windows 10 LTSC 2019 v$LatestRelease\bin" -ItemType Directory -Force
          $Parameters = @{
              Path            = @("$PSScriptRoot\PolicyFileEditor")
              Destination     = "Sophia Script for Windows 10 LTSC 2019 v$LatestRelease\bin"
              Recurse         = $true
              Force           = $true
          }
          Copy-Item @Parameters
          Get-ChildItem -Path "Sophia Script\Sophia Script for Windows 10 LTSC 2019" -Force | Copy-Item -Destination "Sophia Script for Windows 10 LTSC 2019 v$LatestRelease" -Recurse -Force

          $Parameters = @{
              Path             = "Sophia Script for Windows 10 LTSC 2019 v$LatestRelease"
              DestinationPath  = "Sophia.Script.for.Windows.10.LTSC.2019.v$LatestRelease.zip"
              CompressionLevel = "Fastest"
              Force            = $true
          }
          Compress-Archive @Parameters

          # Calculate hash
          Get-Item -Path "Sophia.Script.for.Windows.10.LTSC.2019.v$LatestRelease.zip" -Force | ForEach-Object -Process {
              "$($_.Name)  $((Get-FileHash -LiteralPath $_.FullName -Algorithm SHA256).Hash)"
          } | Add-Content -Path SHA256SUM -Encoding Default -Force

      - name: Sophia Script for Windows 10 LTSC 2021
        run: |
          # https://github.com/farag2/Sophia-Script-for-Windows/blob/master/sophia_script_versions.json
          $Parameters = @{
            Uri = "https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/sophia_script_versions.json"
          }
          $LatestRelease = (Invoke-RestMethod @Parameters).Sophia_Script_Windows_10_LTSC2021

          Write-Verbose -Message "Sophia.Script.for.Windows.10.LTSC.2021.v$LatestRelease.zip" -Verbose

          New-Item -Path "Sophia Script for Windows 10 LTSC 2021 v$LatestRelease\bin" -ItemType Directory -Force
          $Parameters = @{
              Path            = @("$PSScriptRoot\PolicyFileEditor")
              Destination     = "Sophia Script for Windows 10 LTSC 2021 v$LatestRelease\bin"
              Recurse         = $true
              Force           = $true
          }
          Copy-Item @Parameters
          Get-ChildItem -Path "Sophia Script\Sophia Script for Windows 10 LTSC 2021" -Force | Copy-Item -Destination "Sophia Script for Windows 10 LTSC 2021 v$LatestRelease" -Recurse -Force

          $Parameters = @{
              Path             = "Sophia Script for Windows 10 LTSC 2021 v$LatestRelease"
              DestinationPath  = "Sophia.Script.for.Windows.10.LTSC.2021.v$LatestRelease.zip"
              CompressionLevel = "Fastest"
              Force            = $true
          }
          Compress-Archive @Parameters

          # Calculate hash
          Get-Item -Path "Sophia.Script.for.Windows.10.LTSC.2021.v$LatestRelease.zip" -Force | ForEach-Object -Process {
              "$($_.Name)  $((Get-FileHash -LiteralPath $_.FullName -Algorithm SHA256).Hash)"
          } | Add-Content -Path SHA256SUM -Encoding Default -Force

      - name: Sophia Script for Windows 11
        run: |
          # https://github.com/farag2/Sophia-Script-for-Windows/blob/master/sophia_script_versions.json
          $Parameters = @{
            Uri = "https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/sophia_script_versions.json"
          }
          $LatestRelease = (Invoke-RestMethod @Parameters).Sophia_Script_Windows_11_PowerShell_5_1

          Write-Verbose -Message "Sophia.Script.for.Windows.11.v$LatestRelease.zip" -Verbose

          New-Item -Path "Sophia Script for Windows 11 v$LatestRelease\bin" -ItemType Directory -Force
          $Parameters = @{
              Path            = @("$PSScriptRoot\PolicyFileEditor")
              Destination     = "Sophia Script for Windows 11 v$LatestRelease\bin"
              Recurse         = $true
              Force           = $true
          }
          Copy-Item @Parameters
          Get-ChildItem -Path "Sophia Script\Sophia Script for Windows 11" -Force | Copy-Item -Destination "Sophia Script for Windows 11 v$LatestRelease" -Recurse -Force

          $Parameters = @{
              Path             = "Sophia Script for Windows 11 v$LatestRelease"
              DestinationPath  = "Sophia.Script.for.Windows.11.v$LatestRelease.zip"
              CompressionLevel = "Fastest"
              Force            = $true
          }
          Compress-Archive @Parameters

          # Calculate hash
          Get-Item -Path "Sophia.Script.for.Windows.11.v$LatestRelease.zip" -Force | ForEach-Object -Process {
              "$($_.Name)  $((Get-FileHash -LiteralPath $_.FullName -Algorithm SHA256).Hash)"
          } | Add-Content -Path SHA256SUM -Encoding Default -Force

      - name: Sophia Script for Windows 11 PowerShell 7
        run: |
          # https://github.com/farag2/Sophia-Script-for-Windows/blob/master/sophia_script_versions.json
          $Parameters = @{
            Uri = "https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/sophia_script_versions.json"
          }
          $LatestRelease = (Invoke-RestMethod @Parameters).Sophia_Script_Windows_11_PowerShell_7

          Write-Verbose -Message "Sophia.Script.for.Windows.11.PowerShell.7.v$LatestRelease.zip" -Verbose

          New-Item -Path "Sophia Script for Windows 11 PowerShell 7 v$LatestRelease\bin" -ItemType Directory -Force
          $Parameters = @{
              Path            = @("$PSScriptRoot\PolicyFileEditor", "$PSScriptRoot\WinRT.Runtime.dll", "$PSScriptRoot\Microsoft.Windows.SDK.NET.dll")
              Destination     = "Sophia Script for Windows 10 PowerShell 7 v$LatestRelease\bin"
              Recurse         = $true
              Force           = $true
          }
          Copy-Item @Parameters
          Get-ChildItem -Path "Sophia Script\Sophia Script for Windows 11 PowerShell 7" -Force | Copy-Item -Destination "Sophia Script for Windows 11 PowerShell 7 v$LatestRelease" -Recurse -Force

          $Parameters = @{
              Path             = "Sophia Script for Windows 11 PowerShell 7 v$LatestRelease"
              DestinationPath  = "Sophia.Script.for.Windows.11.PowerShell.7.v$LatestRelease.zip"
              CompressionLevel = "Fastest"
              Force            = $true
          }
          Compress-Archive @Parameters

          # Calculate hash
          Get-Item -Path "Sophia.Script.for.Windows.11.PowerShell.7.v$LatestRelease.zip" -Force | ForEach-Object -Process {
              "$($_.Name)  $((Get-FileHash -LiteralPath $_.FullName -Algorithm SHA256).Hash)"
          } | Add-Content -Path SHA256SUM -Encoding Default -Force

      - name: Sophia Script Wrapper
        run: |
          # https://github.com/farag2/Sophia-Script-for-Windows/blob/master/sophia_script_versions.json
          $Parameters = @{
            Uri = "https://raw.githubusercontent.com/farag2/Sophia-Script-for-Windows/master/sophia_script_versions.json"
          }
          $LatestRelease = (Invoke-RestMethod @Parameters).Sophia_Script_Wrapper

          Write-Verbose -Message "Sophia.Script.Wrapper.v$LatestRelease.zip" -Verbose

          New-Item -Path "Sophia Script Wrapper v$LatestRelease" -ItemType Directory -Force
          Get-ChildItem -Path Wrapper -Exclude README.md -Force | Copy-Item -Destination "Sophia Script Wrapper v$LatestRelease" -Recurse -Force

          $Parameters = @{
              Path             = "Sophia Script Wrapper v$LatestRelease"
              DestinationPath  = "Sophia.Script.Wrapper.v$LatestRelease.zip"
              CompressionLevel = "Fastest"
              Force            = $true
          }
          Compress-Archive @Parameters

          # Calculate hash
          Get-Item -Path "Sophia.Script.Wrapper.v$LatestRelease.zip" -Force | ForEach-Object -Process {
              "$($_.Name)  $((Get-FileHash -LiteralPath $_.FullName -Algorithm SHA256).Hash)"
          } | Add-Content -Path SHA256SUM -Encoding Default -Force

      - name: Upload archives to release
        uses: svenstaro/upload-release-action@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Sophia*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          prerelease: true

      - name: Upload archives to release
        uses: svenstaro/upload-release-action@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: SHA256SUM
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          prerelease: true
